@using DevConnect.Models
@model DevConnect.ViewModels.ChatViewModel
<link rel="stylesheet" href="~/css/Chat_styles.css"/>
<div class="row p-5">
    <div class="mb-3"><h3 class="text-center">@Model.FriendUsername</h3></div>
    @{
        if(Model!=null)
        {
            for (int i = 0; i < Model.Messages.Count; i++)
            {
                if(Model.Messages[i].Item2==true)
                {
                    <div class="my-message-card mb-5 position-relative p-3">
                        <p class="text-dark">@Model.Messages[i].Item1</p><br />
                        <div class="position-absolute bottom-0 start-3"><p class="text-dark text-break">@Model.SendAt[i]</p></div>
                    </div>
                }
                else
                {
                    <div class="friend-message-card mb-5 position-relative p-3">
                        <p>@Model.Messages[i].Item1</p><br />
                        <div class="position-absolute bottom-0 start-3"><p class="text-light text-break">@Model.SendAt[i]</p></div>
                    </div>
                }
            }
        }
        <div id="last-messages"accesskey=""></div>
    }
    <div class="mt-3" style="padding-bottom:100px;">
        @await Html.PartialAsync("_AddMessagePartial", new Message() { ChatId = Model.Id, ToUserId = Model.FriendId })
    </div>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
    <script src="~/js/signalR_client.js"></script>
}